<?php

namespace Zeropingheroes\Lanager\Http\Controllers;

use Zeropingheroes\Lanager\{{model}};
use Zeropingheroes\Lanager\Requests\Store{{model}}Request;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\View;

class {{model}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{variables}} = {{model}}::all();
        return View::make('pages.{{view}}.index')
            ->with('{{variables}}', ${{variables}});
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $this->authorize('create', {{model}}::class);

        return View::make('pages.{{view}}.create')
            ->with('{{variable}}', new {{model}});
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $httpRequest
     * @return \Illuminate\Http\Response
     */
    public function store(Request $httpRequest)
    {
        $this->authorize('create', {{model}}::class);

        $input = [
            'name' => $httpRequest->input('name'),
            'description' => $httpRequest->input('description'),
        ];

        $request = new Store{{model}}Request($input);

        if ($request->invalid()) {
            return redirect()
                ->back()
                ->withError($request->errors())
                ->withInput();
        }

        ${{variable}} = {{model}}::create($input);

        return redirect()
            ->route('{{route}}.show', ${{variable}});
    }

    /**
     * Display the specified resource.
     *
     * @param  \Zeropingheroes\Lanager\{{model}} ${{variable}}
     * @return \Illuminate\Http\Response
     */
    public function show({{model}} ${{variable}})
    {
        $this->authorize('view', ${{variable}});

        return View::make('pages.{{view}}.show')
            ->with('{{variable}}', ${{variable}});
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \Zeropingheroes\Lanager\{{model}} ${{variable}}
     * @return \Illuminate\Http\Response
     */
    public function edit({{model}} ${{variable}})
    {
        $this->authorize('update', ${{variable}});

        return View::make('pages.{{view}}.edit')
            ->with('{{variable}}', ${{variable}});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $httpRequest
     * @param  \Zeropingheroes\Lanager\{{model}} ${{variable}}
     * @return \Illuminate\Http\Response
     */
    public function update(Request $httpRequest, {{model}} ${{variable}})
    {
        $this->authorize('update', ${{variable}});

        $input = [
            'name' => $httpRequest->input('name'),
            'description' => $httpRequest->input('description'),
            'id' => ${{variable}}->id,
        ];

        $request = new Store{{model}}Request($input);

        if ($request->invalid()) {
            return redirect()
                ->back()
                ->withError($request->errors())
                ->withInput();
        }

        ${{variable}}->update($input);

        return redirect()
            ->route('{{route}}.show', ${{variable}});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \Zeropingheroes\Lanager\{{model}} ${{variable}}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{model}} ${{variable}})
    {
        $this->authorize('delete', ${{variable}});

        {{model}}::destroy(${{variable}}->id);

        return redirect()
            ->route('{{route}}.index')
            ->withSuccess(__('phrase.item-name-deleted', [
                'item' => __('title.{{lang}}'),
                'name' => ${{variable}}->name
            ]));
    }
}
